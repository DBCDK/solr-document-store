<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <artifactId>solr-indexer-cloud</artifactId>
    <groupId>dk.dbc</groupId>
    <version>1.0-SNAPSHOT</version>
  </parent>

  <repositories>
    <repository>
      <id>mavenrepo.dbc.dk</id>
      <url>http://mavenrepo.dbc.dk/content/groups/public</url>
    </repository>
  </repositories>

  <groupId>dk.dbc</groupId>
  <artifactId>solr-indexer-cloud-worker</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>war</packaging>

  <name>solr-indexer-cloud-worker</name>

  <properties>
    <endorsed.dir>${project.build.directory}/endorsed</endorsed.dir>
    <glassfish.dir>${project.build.directory}/glassfish</glassfish.dir>
    <test.resources>${project.build.directory}/test-resources</test.resources>
  </properties>

  <dependencies>
    <dependency>
      <groupId>dk.dbc</groupId>
      <artifactId>dbc-jslib-helper</artifactId>
      <version>1.3-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>dk.dbc</groupId>
      <artifactId>dbc-commons-log</artifactId>
      <version>1.3-SNAPSHOT</version>
      <type>jar</type>
    </dependency>
    <dependency>
      <groupId>dk.dbc</groupId>
      <artifactId>opensearch-commons-repository</artifactId>
      <version>1.11-SNAPSHOT</version>
      <type>jar</type>
    </dependency>
    <dependency>
      <groupId>dk.dbc</groupId>
      <artifactId>corepo-access-ee</artifactId>
      <version>1.0-SNAPSHOT</version>
      <type>jar</type>
    </dependency>
    <dependency>
      <groupId>org.apache.solr</groupId>
      <artifactId>solr-solrj</artifactId>
      <type>jar</type>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <type>jar</type>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
      <type>jar</type>
    </dependency>
    <dependency>
      <groupId>dk.dbc.testutils</groupId>
      <artifactId>maven-javascript-unit-test-runner</artifactId>
      <version>0.1.0-SNAPSHOT</version>
      <type>tar.gz</type>
      <classifier>bin</classifier>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>dk.dbc</groupId>
      <artifactId>solr-indexer-cloud-shared</artifactId>
      <version>1.0-SNAPSHOT</version>
      <type>jar</type>
    </dependency>
    <dependency>
      <groupId>javax</groupId>
      <artifactId>javaee-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
    </dependency>
    <dependency>
      <groupId>com.codahale.metrics</groupId>
      <artifactId>metrics-core</artifactId>
    </dependency>
    <dependency>
        <groupId>com.github.danielwegener</groupId>
        <artifactId>logback-kafka-appender</artifactId>
        <version>0.1.0</version>
    </dependency>
    <dependency>
      <groupId>com.sun.messaging.mq</groupId>
      <artifactId>imq</artifactId>
      <version>4.4.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>dk.dbc</groupId>
      <artifactId>openagency-ws-client</artifactId>
      <version>2.23-SNAPSHOT</version>
    </dependency>

  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>reserve-network-port</id>
            <goals>
              <goal>reserve-network-port</goal>
            </goals>
            <phase>pre-integration-test</phase>
            <configuration>
              <portNames>
                <portName>glassfish.http.port</portName>
                <portName>glassfish.jms.port</portName>
                <portName>glassfish.jndi.port</portName>
                <portName>corepo.port</portName>
              </portNames>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <compilerArgs>
            <arg>-Djava.endorsed.dirs=${endorsed.dir}</arg>
          </compilerArgs>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <failOnMissingWebXml>false</failOnMissingWebXml>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>validate</id>
            <phase>validate</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <outputDirectory>${endorsed.dir}</outputDirectory>
              <silent>true</silent>
              <artifactItems>
                <artifactItem>
                  <groupId>javax</groupId>
                  <artifactId>javaee-endorsed-api</artifactId>
                  <version>7.0</version>
                  <type>jar</type>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <!-- Javascript test test runner -->
          <execution>
            <id>unpack-js-unittest-runner</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack-dependencies</goal>
            </goals>
            <configuration>
              <includeTypes>tar.gz</includeTypes>
              <excludeTransitive>true</excludeTransitive>
              <outputDirectory>${project.build.directory}</outputDirectory>
              <useSubDirectoryPerArtifact>false</useSubDirectoryPerArtifact>
              <stripVersion>true</stripVersion>
            </configuration>
          </execution>
          <!-- Unpack corepo DB shema-->
          <execution>
            <id>unpack-cfg-test-resources</id>
            <goals>
              <goal>unpack-dependencies</goal>
            </goals>
            <phase>pre-integration-test</phase>
            <configuration>
              <outputDirectory>${test.resources}/repository</outputDirectory>
              <includes>*.sql</includes>
              <artifactItems>
                <artifactItem>
                  <groupId>dk.dbc</groupId>
                  <artifactId>corepo-access</artifactId>
                  <version>1.0-SNAPSHOT</version>
                  <overWrite>true</overWrite>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>Javascript unit tests</id>
            <phase>process-test-classes</phase>
            <goals>
              <goal>exec</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <executable>${project.build.directory}/maven-javascript-unit-test-runner/bin/test-runner.sh</executable>
          <workingDirectory>${project.build.directory}/maven-javascript-unit-test-runner</workingDirectory>
          <environmentVariables>
            <USE_JAVA_XML_DOM>true</USE_JAVA_XML_DOM>
            <MODULE_PATHS>
              classpath:javascript/ classpath:javascript/javacore/ classpath:javascript/jscommon/system/ classpath:javascript/jscommon/convert/ classpath:javascript/jscommon/devel/ classpath:javascript/jscommon/util/ classpath:javascript/jscommon/external/ classpath:javascript/jscommon/marc/ classpath:javascript/jscommon/io/ classpath:javascript/jscommon/xml/ file://${basedir}/src/main/resources/javascript/standard-index-values/
            </MODULE_PATHS>
          </environmentVariables>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <redirectTestOutputToFile>true</redirectTestOutputToFile>
        </configuration>
      </plugin>
      <plugin>
        <groupId>dk.dbc</groupId>
        <artifactId>postgresql-maven-plugin</artifactId>
        <version>1.3-SNAPSHOT</version>
        <executions>
          <execution>
            <id>start-postgresql</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
            <configuration>
              <pgPort>${corepo.port}</pgPort>
              <pgDbName>corepo</pgDbName>
              <pgDbScripts>
                <param>${test.resources}/repository/consobjrepo.sql</param>
                <param>${test.resources}/repository/root.sql</param>
              </pgDbScripts>
              <parameters>
                <max_prepared_transactions>10</max_prepared_transactions>
                <log_statement>'all'</log_statement>
                <log_line_prefix>'%m %d '</log_line_prefix>
              </parameters>
            </configuration>
          </execution>
          <execution>
            <id>stop-postgresql</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>shutdown</goal>
            </goals>
            <configuration>
              <saveLog>true</saveLog>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.glassfish.embedded</groupId>
        <artifactId>maven-embedded-glassfish-plugin</artifactId>
        <version>4.1.1</version>
        <configuration>
          <autoDelete>false</autoDelete>
          <configFileReadOnly>false</configFileReadOnly>
          <ports>
            <http-listener>${glassfish.http.port}</http-listener>
          </ports>
          <systemProperties>
            <property>glassfish.embedded.tmpdir=${glassfish.dir}/tmp</property>
          </systemProperties>
          <glassfishProperties>
            <property>embedded-glassfish-config.server.jms-service.jms-host.default_JMS_host.port=${glassfish.jms.port}</property>
            <property>embedded-glassfish-config.server.iiop-service.iiop-listener.orb-listener-1.port=${glassfish.jndi.port}</property>
          </glassfishProperties>
        </configuration>
        <!--Start GlassFish-->
        <executions>
          <execution>
            <id>start-glassfish</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
            <configuration>
            </configuration>
          </execution>
          <!-- setup config -->
          <execution>
            <id>custom-resources</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>admin</goal>
            </goals>
            <configuration>
              <commands>
                <command>create-custom-resource --restype=java.util.Properties --factoryclass=org.glassfish.resources.custom.factory.PropertiesFactory --property=jmxDomain=solr-worker:resourceBase=solr-worker/corepo:solrDocumentQueueName=jms_solrDocuments:openAgencyUrl="http://openagency.addi.dk/test_2.30/" solr-worker</command>
                <command>create-jdbc-connection-pool --restype=javax.sql.DataSource --datasourceclassname=org.postgresql.ds.PGSimpleDataSource --property=driverClass=org.postgresql.Driver:url="jdbc:postgresql://localhost:${corepo.port}/corepo":User=${user.name}:Password="" jdbc/solr-worker/corepo/pool</command>
                <command>create-jdbc-resource --connectionpoolid=jdbc/solr-worker/corepo/pool jdbc/solr-worker/corepo</command>
                <command>jms-ping</command>
                <command>create-jms-resource --restype=javax.jms.QueueConnectionFactory jms/indexerConnectionFactory</command>
                <command>create-jms-resource --restype=javax.jms.Queue jms/pidQueue</command>
                <command>create-jms-resource --restype=javax.jms.Queue jms/deadPidQueue</command>
                <command>create-jms-resource --restype=javax.jms.Queue jms/solrDocuments</command>
              </commands>
            </configuration>
          </execution>
          <!--Deploy workerin GlassFish-->
          <execution>
            <id>worker-deploy</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>deploy</goal>
            </goals>
            <configuration>
              <app>${project.build.directory}/${project.build.finalName}</app>
              <contextRoot>/worker</contextRoot>
              <name>worker</name>
            </configuration>
          </execution>
          <execution>
            <id>stop-glassfish</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <configuration>
          <redirectTestOutputToFile>true</redirectTestOutputToFile>
          <systemPropertyVariables>
            <glassfish.http.port>${glassfish.http.port}</glassfish.http.port>
            <glassfish.jms.port>${glassfish.jms.port}</glassfish.jms.port>
            <glassfish.jndi.port>${glassfish.jndi.port}</glassfish.jndi.port>
            <org.omg.CORBA.ORBInitialPort>${glassfish.jndi.port}</org.omg.CORBA.ORBInitialPort>
            <corepo.port>${corepo.port}</corepo.port>
          </systemPropertyVariables>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
