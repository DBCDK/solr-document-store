<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>solr-doc-store</artifactId>
        <groupId>dk.dbc</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>solr-doc-store-updater</artifactId>
    <packaging>war</packaging>

    <properties>
        <solr.version>8.2.0</solr.version>
    </properties>
    
    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>${project.parent.artifactId}-queue</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>dk.dbc</groupId>
            <artifactId>pg-queue-common</artifactId>
            <version>${pg-queue.version}</version>
        </dependency>
        <dependency>
            <groupId>dk.dbc</groupId>
            <artifactId>pg-queue-consumer</artifactId>
            <version>${pg-queue.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.solr</groupId>
            <artifactId>solr-solrj</artifactId>
            <version>${solr.version}</version>
        </dependency>
        <dependency>
            <groupId>dk.dbc</groupId>
            <artifactId>dbc-commons-graceful-cache</artifactId>
            <version>1.3-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>dk.dbc</groupId>
            <artifactId>dbc-commons-log</artifactId>
            <version>1.3-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <scope>provided</scope>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-jaxb-annotations</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>annotations</artifactId>
            <version>3.0.1</version>
        </dependency>
        <dependency>
            <groupId>net.jodah</groupId>
            <artifactId>failsafe</artifactId>
            <version>1.0.4</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.microprofile.metrics</groupId>
            <artifactId>microprofile-metrics-api</artifactId>
            <version>${microprofile.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-api</artifactId>
        </dependency>

        <!--
        This block is instead of fish.payara.extras:payara-embedded-all
        which provides another ClientBuilder - client, which is incompatible
        with running in unittests
        -->
        <dependency>
            <groupId>fish.payara.api</groupId>
            <artifactId>payara-api</artifactId>
            <version>${payara.major.minor.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>fish.payara.extras</groupId>
            <artifactId>payara-micro</artifactId>
            <version>${payara.major.minor.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.hazelcast</groupId>
            <artifactId>hazelcast</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.cache</groupId>
            <artifactId>cache-api</artifactId>
            <version>1.1.0</version>
        </dependency>

        <dependency>
            <groupId>dk.dbc.commoms.testutils</groupId>
            <artifactId>dbc-commons-testutil-postgres-connection</artifactId>
            <version>1.3-SNAPSHOT</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>dk.dbc</groupId>
            <artifactId>pg-queue-supplier</artifactId>
            <version>${pg-queue.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-client</artifactId>
            <version>${jersey.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.inject</groupId>
            <artifactId>jersey-hk2</artifactId>
            <version>2.28</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>false</filtering>
            </testResource>
            <testResource>
                <directory>src/test/filter-resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>
                
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>reserve-network-port</id>
                        <goals>
                            <goal>reserve-network-port</goal>
                        </goals>
                        <phase>initialize</phase>
                        <configuration>
                            <portNames>
                                <portName>postgresql.port</portName>
                                <portName>solr.port</portName>
                                <portName>solr.port.shutdown</portName>
                                <portName>glassfish.port</portName>
                                <portName>wiremock.port</portName>
                            </portNames>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>

            <plugin> 
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-service-war-dependencies</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeArtifactIds>slf4j-api,logback-classic,logback-core,postgresql</includeArtifactIds>
                            <stripClassifier>true</stripClassifier>
                            <stripVersion>true</stripVersion>
                            <outputDirectory>${project.build.directory}/provided-jars</outputDirectory>
                        </configuration>
                    </execution>

                    <execution>
                        <id>payara-micro-jar</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>fish.payara.extras</groupId>
                                    <artifactId>payara-micro</artifactId>
                                    <version>${payara.major.minor.version}</version>
                                </artifactItem>
                            </artifactItems>
                            <stripClassifier>true</stripClassifier>
                            <stripVersion>true</stripVersion>
                            <outputDirectory>${project.build.directory}/payara-micro/</outputDirectory>
                        </configuration>
                    </execution>

                    <execution>
                        <id>solr-exec</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>dk.dbc</groupId>
                                    <artifactId>dbc-solr8-base</artifactId>
                                    <version>${solr.version}-SNAPSHOT</version>
                                    <type>zip</type>
                                </artifactItem>
                            </artifactItems>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                            <overWriteSnapshots>true</overWriteSnapshots>
                        </configuration>
                    </execution>

                    <execution>
                        <id>solr-config</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/solr/server/solr/corepo/conf</outputDirectory>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>dk.dbc</groupId>
                                    <artifactId>corepo-indexer-solr</artifactId>
                                    <version>1.1-SNAPSHOT</version>S
                                    <classifier>no-stored</classifier>
                                    <type>zip</type>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                    <execution>
                        <id>docker-payara-utils</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>dk.dbc</groupId>
                                    <artifactId>payara-utils-runtime</artifactId>
                                    <version>1.0-SNAPSHOT</version>
                                    <outputDirectory>${project.build.directory}/docker/</outputDirectory>
                                    <destFileName>payara-utils-runtime.jar</destFileName>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>uk.co.automatictester</groupId>
                <artifactId>wiremock-maven-plugin</artifactId>          
                <version>2.14.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <dir>${basedir}/src/test/resources/wiremock</dir>
                            <params>--port=${wiremock.port} --proxy-all=http://localhost/ --record-mappings</params>
                        </configuration>
                    </execution>
                </executions>
            </plugin>   

            <plugin>
                <groupId>dk.dbc</groupId>
                <artifactId>postgresql-maven-plugin</artifactId>
                <version>1.3-SNAPSHOT</version>
                <executions>
                    <execution>
                        <id>start-postgresql</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>start</goal>
                        </goals>
                        <configuration>
                            <pgPort>${postgresql.port}</pgPort>
                            <pgDbName>solrdocstore</pgDbName>
                            <pgDbScripts>
                                <pgDbScript>${basedir}/src/test/resources/solrdocstore-data.sql</pgDbScript>
                            </pgDbScripts>
                        </configuration>
                    </execution>
   
                    <execution>
                        <id>stop-postgresql</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>shutdown</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.6.0</version>
                <executions>
                    <execution>
                        <id>start-payara</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <async>true</async>
                            <environmentVariables>
                                <DOCSTORE_POSTGRES_URL>localhost:${postgresql.port}/solrdocstore</DOCSTORE_POSTGRES_URL>
                            </environmentVariables>
                            <executable>java</executable>
                            <arguments>
                                <argument>-jar</argument>
                                <argument>${basedir}/target/payara-micro/payara-micro.jar</argument>
                                <argument>--disablephonehome</argument>
                                <argument>--nocluster</argument>
                                <argument>--addjars</argument>
                                <argument>${basedir}/target/provided-jars/postgresql.jar:${basedir}/target/provided-jars/slf4j-api.jar:${basedir}/target/provided-jars/logback-classic.jar:${basedir}/target/provided-jars/logback-core.jar</argument>
                                <argument>--port</argument>
                                <argument>${glassfish.port}</argument>
                                <argument>--postbootcommandfile</argument>
                                <argument>${basedir}/target/test-classes/payara-setup/postbootcommandfile.txt</argument>
                                <argument>--logtofile</argument>
                                <argument>${basedir}/target/test-classes/payara-setup/micro.log</argument>
                                <argument>--contextroot</argument>
                                <argument>/</argument>
                                <argument>--deploy</argument>
                                <argument>${basedir}/../service/target/solr-doc-store-service-1.0-SNAPSHOT.war</argument>
                            </arguments>
                        </configuration>
                    </execution>

                    <execution>
                        <id>start-solr</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>sh</executable>
                            <arguments>
                                <argument>-ce</argument>
                                <argument>echo name=corepo > ${project.build.directory}/solr/server/solr/corepo/core.properties; SOLR_ULIMIT_CHECKS=false ${project.build.directory}/solr/bin/solr start -p ${solr.port}</argument>
                            </arguments>
                        </configuration>
                    </execution>

                    <execution>
                        <id>wait-for-payara</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>sh</executable>
                            <arguments>
                                <argument>-c</argument>
                                <!-- wait for status endpoint to respond with 200 -->
                                <argument><![CDATA[
for i in 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0; do
    if ! curl -sf http://localhost:${glassfish.port}/api/status; then
        exit 0
    fi
    echo "waiting - $i"
    sleep 1
done
exit 1
]]></argument>
                            </arguments>
                        </configuration>
                    </execution>


                    <execution>
                        <id>stop-solr</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>sh</executable>
                            <arguments>
                                <argument>-ce</argument>
                                <argument>SOLR_ULIMIT_CHECKS=false ${project.build.directory}/solr/bin/solr stop -p ${solr.port}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.22.1</version>
                <configuration>
                    <redirectTestOutputToFile>false</redirectTestOutputToFile>
                    <systemPropertyVariables>
                        <postgresql.port>${postgresql.port}</postgresql.port>
                    </systemPropertyVariables>
                    <environmentVariables>
                        <SOLR_URL>http://localhost:${solr.port}/solr/corepo</SOLR_URL>
                        <SOLR_DOC_STORE_URL>http://localhost:${glassfish.port}/</SOLR_DOC_STORE_URL>
                        <OPEN_AGENCY_URL>http://localhost:${wiremock.port}/openagency/</OPEN_AGENCY_URL>
                        <PROFILE_SERVICE_URL>http://localhost:${wiremock.port}/profile-service/</PROFILE_SERVICE_URL>
                        <SOLR_APPID>solr-doc-store-updater</SOLR_APPID>
                    </environmentVariables>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.8.2</version>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
